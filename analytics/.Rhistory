demo()
library(ggplot2)
1+2+3+4
library(RCurl)
#1. Charger les packages
library(httr)
library(XML)
#2. Récupérer le code source
url <- "https://remibacha.com"
request <- GET(url)
doc <- htmlParse(request, asText = TRUE)
#3. Récupérer le title et compter le nombre de caractères
PageTitle <- xpathSApply(doc, "//title", xmlValue)
nchar(PageTitle)
#4. Récupérer les noms des articles
PostTitles <- data.frame(xpathSApply(doc, "//h2[@class='entry-title h1']", xmlValue))
PostTitles <- data.frame(xpathSApply(doc, "//h2", xmlValue))
#5. Récupérer tous les liens de la page et en faire une liste
hrefs <- xpathSApply(doc, "//div/a", xmlGetAttr, 'href')
hrefs <- data.frame(matrix(unlist(hrefs), byrow=T))
#6. Récupérer les liens du menu
liensmenu <- xpathSApply(doc, "//ul[@id='menu-menu']//a", xmlGetAttr, 'href')
liensmenu <- data.frame(matrix(unlist(liensmenu), byrow=T))
#7. Récupérer le status code et le header
status_code(request)
header <- headers(request)
header <- data.frame(matrix(unlist(header), byrow=T))
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
install.packages("devtools")
install_github('plotly/dashR', upgrade = TRUE)
install.packages("dashHtmlComponents")
install.packages("dashCoreComponents")
install.packages("dashTable")
install.packages("dashTable", repo = "https://mac.R-project.org")
install.packages('dashTable',repos='http://cran.us.r-project.org')
install.packages("dash")
setwd('/home/goach/Documents/workspace/R_Folder/analytics/')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('clean.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('analytics.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('clean.R')
source('clean.R')
source('analytics.R')
source('analytics.R')
source('clean.R')
source('clean.R')
source('clean.R')
source('analytics.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
install.packages('RMySQL')
install.packages('RMySQL')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
install.packages('odbc')
install.packages('odbc')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
devtools::install_github("rstats-db/RMySQL#90")
devtools::install_github("rstats-db/RMySQL#90")
source('import.R')
source('import.R')
source('import.R')
traceback()
source('import.R')
traceback()
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('import.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
DB <- dbConnect(RMySQL::MySQL(), user="goach", host="127.0.0.1", password="M0dp4s66", dbname="ecocup", port=3306)
startDate
startDate <- '2020-01-01'
endDate <- '2020-02-01'
df <- dbSendQuery(DB, paste0("SELECT * FROM factures WHERE date >=", startDate, "AND date <=", endDate) )
df <- dbSendQuery(DB, paste0("SELECT * FROM factures WHERE date >=", startDate, "AND date <=", endDate,";") )
paste0("SELECT * FROM factures WHERE date >=", startDate, "AND date <=", endDate,";")
sql <- paste0("SELECT * FROM factures WHERE date >=", startDate, "AND date <=", endDate,";")
sql
View(sql)
df <- dbSendQuery(DB, paste0("SELECT * FROM factures WHERE date >='", startDate, "' AND date <='", endDate,"';") )
View(df)
requete <- paste0("SELECT * FROM factures WHERE date >='", startDate, "' AND date <='", endDate,"';")
requete
message(requete)
dbClearResult(df)
View (df)
df <- dbFetch(df)
df1 <- dbFetch(df)
df <- dbSendQuery(DB, paste0("SELECT * FROM factures WHERE date >='", startDate, "' AND date <='", endDate,"';") )
dbColumnInfo(df)
dbFetch(df)
View(df)
dbReadTable(DB, "factures")
DB <- dbConnect(RMySQL::MySQL(), user="goach", host="127.0.0.1", password="M0dp4s66", dbname="ecocup", port=3306)
df <- dbSendQuery(DB, paste0("SELECT * FROM factures WHERE date >='", startDate, "' AND date <='", endDate,"';") )
dbReadTable(DB, "factures")
dt <- dbReadTable(DB, "factures")
dbClearResult(df)
dbReadTable(DB, "factures")
dt <- dbReadTable(DB, "factures")
View (dt)
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
source('analytics.R')
dbDisconnect(DB)
source('analytics.R')
dbDisconnect(DB)
source('analytics.R')
source('analytics.R')
dbDisconnect(DB)
source('analytics.R')
source('analytics.R')
dbDisconnect(DB)
source('analytics.R')
source('analytics.R')
dbDisconnect(DB)
dbDisconnect(DB)
source('analytics.R')
